--- kremlib/c/testlib.c
+++ kremlib/c/testlib.c
@@ -3,25 +3,41 @@
 
 #include "TestLib.h"
 
+#ifdef __APPLE__
+#  include <mach/mach_time.h>
+#endif
+
 #ifndef _MSC_VER
 TestLib_cycles TestLib_cpucycles(void) {
+#ifdef __APPLE__
+  return mach_absolute_time();
+#else
   unsigned hi, lo;
   __asm__ __volatile__("rdtsc" : "=a"(lo), "=d"(hi));
   return ((unsigned long long)lo) | (((unsigned long long)hi) << 32);
+#endif
 }
 
 TestLib_cycles TestLib_cpucycles_begin(void)
 {
+#ifdef __APPLE__
+  return mach_absolute_time();
+#else
   unsigned hi, lo;
   __asm__ __volatile__ ("CPUID\n\t"  "RDTSC\n\t"  "mov %%edx, %0\n\t"  "mov %%eax, %1\n\t": "=r" (hi), "=r" (lo):: "%rax", "%rbx", "%rcx", "%rdx");
   return ( (uint64_t)lo)|( ((uint64_t)hi)<<32 );
+#endif
 }
 
 TestLib_cycles TestLib_cpucycles_end(void)
 {
+#ifdef __APPLE__
+  return mach_absolute_time();
+#else
   unsigned hi, lo;
   __asm__ __volatile__ ("RDTSCP\n\t"  "mov %%edx, %0\n\t"  "mov %%eax, %1\n\t"  "CPUID\n\t": "=r" (hi), "=r" (lo)::     "%rax", "%rbx", "%rcx", "%rdx");
   return ( (uint64_t)lo)|( ((uint64_t)hi)<<32 );
+#endif
 }
 #endif
 
